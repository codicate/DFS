syntax = "proto3";

package naming;

service NamingService {
  // Register a new storage server with the naming server.
  rpc RegisterStorageServer(RegisterStorageRequest) returns (RegisterStorageResponse);

  // Get list of storage servers that have a specific file.
  rpc FindServersWithFile(FileLookupRequest) returns (FileLookupResponse);

  // List all files known to the naming server.
  rpc ListFiles(Empty) returns (FileListResponse);

  // Create a file on the system.
  rpc UploadFile(FileUploadRequest) returns (FileUploadResponse);

  // Remove a file from the system.
  rpc RemoveFile(FileRemoveRequest) returns (FileRemoveResponse);

  // Heartbeat to check if the naming server is alive. (It's easier to have a pull model!)
  rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse);

  rpc Log(Empty) returns (Empty);
}

// Used when registering a storage server
message RegisterStorageRequest {
  string storage_address = 1;
}

message RegisterStorageResponse {
  bool success = 1;
  string error_message = 2;
  string storage_address = 3;
}

// Request to get all storage servers that store the file
message FileLookupRequest {
  string filepath = 1;
}

message FileLookupResponse {
  repeated string storage_addresses = 1;
  string error_message = 2;
}

// Empty message type for methods like listing all files
message Empty {}

message FileListResponse {
  repeated string filepaths = 1;
  string error_message = 2;
}

// Request to upload a file
message FileUploadRequest {
  string filepath = 1;
}

message FileUploadResponse {
  repeated string storage_addresses = 1; // The list of storage servers that is returned to client
  string error_message = 2;
}

// Request to remove a file
message FileRemoveRequest {
  string filepath = 1;
}

message FileRemoveResponse {
  bool success = 1;
  string error_message = 2;
}

message HeartbeatRequest {
  string address = 1;             // IP or host:port of the storage server
}

message HeartbeatResponse {
  bool success = 1;               // Whether the heartbeat was accepted
  string error_message = 2;             // Optional: debugging or error info
}